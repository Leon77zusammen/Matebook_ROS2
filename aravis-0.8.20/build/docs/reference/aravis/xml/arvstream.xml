<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY % gtkdocentities SYSTEM "../xml/gtkdocentities.ent">
  %gtkdocentities;
]>
<refentry id="ArvStream">
<refmeta>
<refentrytitle role="top_of_page" id="ArvStream.top_of_page">ArvStream</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>ARAVIS Library</refmiscinfo>
</refmeta>
<refnamediv>
<refname>ArvStream</refname>
<refpurpose>Abstract base class for video stream reception</refpurpose>
</refnamediv>

<refsect1 id="ArvStream.functions" role="functions_proto">
<title role="functions_proto.title">Functions</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="functions_proto_type" colwidth="150px"/>
<colspec colname="functions_proto_name"/>
<tbody>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><phrase role="c_punctuation">(</phrase><link linkend="ArvStreamCallback">*ArvStreamCallback</link><phrase role="c_punctuation">)</phrase>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-push-buffer">arv_stream_push_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="ArvBuffer"><returnvalue>ArvBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="arv-stream-pop-buffer">arv_stream_pop_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="ArvBuffer"><returnvalue>ArvBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="arv-stream-try-pop-buffer">arv_stream_try_pop_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="ArvBuffer"><returnvalue>ArvBuffer</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="arv-stream-timeout-pop-buffer">arv_stream_timeout_pop_buffer</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-n-buffers">arv_stream_get_n_buffers</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-start-thread">arv_stream_start_thread</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-stop-thread">arv_stream_stop_thread</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-emit-signals">arv_stream_get_emit_signals</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-set-emit-signals">arv_stream_set_emit_signals</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-make-thread-realtime">arv_make_thread_realtime</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-make-thread-high-priority">arv_make_thread_high_priority</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="void"><returnvalue>void</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-statistics">arv_stream_get_statistics</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint"><returnvalue>guint</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-n-infos">arv_stream_get_n_infos</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
</entry><entry role="function_name"><link linkend="arv-stream-get-info-name">arv_stream_get_info_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="GType"><returnvalue>GType</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-info-type">arv_stream_get_info_type</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="double"><returnvalue>double</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-info-double">arv_stream_get_info_double</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="double"><returnvalue>double</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-info-double-by-name">arv_stream_get_info_double_by_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-info-uint64">arv_stream_get_info_uint64</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>
<row><entry role="function_type"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
</entry><entry role="function_name"><link linkend="arv-stream-get-info-uint64-by-name">arv_stream_get_info_uint64_by_name</link>&#160;<phrase role="c_punctuation">()</phrase></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ArvStream.properties" role="properties">
<title role="properties.title">Properties</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="properties_type" colwidth="150px"/>
<colspec colname="properties_name" colwidth="300px"/>
<colspec colname="properties_flags" colwidth="200px"/>
<tbody>
<row><entry role="property_type"><link linkend="gpointer"><type>gpointer</type></link></entry><entry role="property_name"><link linkend="ArvStream--callback">callback</link></entry><entry role="property_flags">Read / Write / Construct&#160;Only</entry></row>
<row><entry role="property_type"><link linkend="gpointer"><type>gpointer</type></link></entry><entry role="property_name"><link linkend="ArvStream--callback-data">callback-data</link></entry><entry role="property_flags">Read / Write / Construct&#160;Only</entry></row>
<row><entry role="property_type"><link linkend="ArvDevice"><type>ArvDevice</type></link>&#160;*</entry><entry role="property_name"><link linkend="ArvStream--device">device</link></entry><entry role="property_flags">Read / Write / Construct&#160;Only</entry></row>
<row><entry role="property_type"><link linkend="gboolean"><type>gboolean</type></link></entry><entry role="property_name"><link linkend="ArvStream--emit-signals">emit-signals</link></entry><entry role="property_flags">Read / Write</entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ArvStream.signals" role="signal_proto">
<title role="signal_proto.title">Signals</title>
<informaltable frame="none">
<tgroup cols="3">
<colspec colname="signal_proto_type" colwidth="150px"/>
<colspec colname="signal_proto_name" colwidth="300px"/>
<colspec colname="signal_proto_flags" colwidth="200px"/>
<tbody>
<row><entry role="signal_type"><link linkend="void"><returnvalue>void</returnvalue></link></entry><entry role="signal_name"><link linkend="ArvStream-new-buffer">new-buffer</link></entry><entry role="signal_flags"><link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ArvStream.other" role="other_proto">
<title role="other_proto.title">Types and Values</title>
<informaltable pgwide="1" frame="none">
<tgroup cols="2">
<colspec colname="other_proto_type" colwidth="150px"/>
<colspec colname="other_proto_name"/>
<tbody>
<row><entry role="datatype_keyword">enum</entry><entry role="function_name"><link linkend="ArvStreamCallbackType">ArvStreamCallbackType</link></entry></row>
<row><entry role="datatype_keyword"></entry><entry role="function_name"><link linkend="ArvStream-struct">ArvStream</link></entry></row>

</tbody>
</tgroup>
</informaltable>
</refsect1>
<refsect1 id="ArvStream.object-hierarchy" role="object_hierarchy">
<title role="object_hierarchy.title">Object Hierarchy</title>
<screen>    <link linkend="GObject">GObject</link>
    <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> ArvStream
        <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> <link linkend="ArvFakeStream">ArvFakeStream</link>
        <phrase role="lineart">&#9500;&#9472;&#9472;</phrase> <link linkend="ArvGvStream">ArvGvStream</link>
        <phrase role="lineart">&#9584;&#9472;&#9472;</phrase> <link linkend="ArvUvStream">ArvUvStream</link>
</screen>
</refsect1>
<refsect1 id="ArvStream.implemented-interfaces" role="impl_interfaces">
<title role="impl_interfaces.title">Implemented Interfaces</title>
<para>
ArvStream implements
 <link linkend="GInitable">GInitable</link>.</para>

</refsect1>


<refsect1 id="ArvStream.description" role="desc">
<title role="desc.title">Description</title>
<para><link linkend="ArvStream"><type>ArvStream</type></link> provides an abstract base class for the implementation of video
stream reception threads. The interface between the reception thread and the
main thread is done using asynchronous queues, containing <link linkend="ArvBuffer"><type>ArvBuffer</type></link>
objects.</para>

</refsect1>
<refsect1 id="ArvStream.functions_details" role="details">
<title role="details.title">Functions</title>
<refsect2 id="ArvStreamCallback" role="function">
<title>ArvStreamCallback&#160;()</title>
<indexterm zone="ArvStreamCallback"><primary>ArvStreamCallback</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
<phrase role="c_punctuation">(</phrase>*ArvStreamCallback<phrase role="c_punctuation">)</phrase> (<parameter><link linkend="void"><type>void</type></link> *user_data</parameter>,
                      <parameter><link linkend="ArvStreamCallbackType"><type>ArvStreamCallbackType</type></link> type</parameter>,
                      <parameter><link linkend="ArvBuffer"><type>ArvBuffer</type></link> *buffer</parameter>);</programlisting>
</refsect2>
<refsect2 id="arv-stream-push-buffer" role="function" condition="since:0.2.0">
<title>arv_stream_push_buffer&#160;()</title>
<indexterm zone="arv-stream-push-buffer" role="0.2.0"><primary>arv_stream_push_buffer</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
arv_stream_push_buffer (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                        <parameter><link linkend="ArvBuffer"><type>ArvBuffer</type></link> *buffer</parameter>);</programlisting>
<para>Pushes a <link linkend="ArvBuffer"><type>ArvBuffer</type></link> to the <parameter>stream</parameter>
 thread. The <parameter>stream</parameter>
 takes ownership of <parameter>buffer</parameter>
,
and will free all the buffers still in its queues when destroyed.</para>
<para>This method is thread safe.</para>
<refsect3 id="arv-stream-push-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>buffer</para></entry>
<entry role="parameter_description"><para>buffer to push. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-stream-pop-buffer" role="function" condition="since:0.2.0">
<title>arv_stream_pop_buffer&#160;()</title>
<indexterm zone="arv-stream-pop-buffer" role="0.2.0"><primary>arv_stream_pop_buffer</primary></indexterm>
<programlisting language="C"><link linkend="ArvBuffer"><returnvalue>ArvBuffer</returnvalue></link>&#160;*
arv_stream_pop_buffer (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>);</programlisting>
<para>Pops a buffer from the output queue of <parameter>stream</parameter>
. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.
This function blocks until a buffer is available.</para>
<para>This method is thread safe.</para>
<refsect3 id="arv-stream-pop-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-pop-buffer.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="ArvBuffer"><type>ArvBuffer</type></link>. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-stream-try-pop-buffer" role="function" condition="since:0.2.0">
<title>arv_stream_try_pop_buffer&#160;()</title>
<indexterm zone="arv-stream-try-pop-buffer" role="0.2.0"><primary>arv_stream_try_pop_buffer</primary></indexterm>
<programlisting language="C"><link linkend="ArvBuffer"><returnvalue>ArvBuffer</returnvalue></link>&#160;*
arv_stream_try_pop_buffer (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>);</programlisting>
<para>Pops a buffer from the output queue of <parameter>stream</parameter>
. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.
This is the non blocking version of pop_buffer.</para>
<para>This method is thread safe.</para>
<refsect3 id="arv-stream-try-pop-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-try-pop-buffer.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="ArvBuffer"><type>ArvBuffer</type></link>, NULL if no buffer is available. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-stream-timeout-pop-buffer" role="function" condition="since:0.2.0">
<title>arv_stream_timeout_pop_buffer&#160;()</title>
<indexterm zone="arv-stream-timeout-pop-buffer" role="0.2.0"><primary>arv_stream_timeout_pop_buffer</primary></indexterm>
<programlisting language="C"><link linkend="ArvBuffer"><returnvalue>ArvBuffer</returnvalue></link>&#160;*
arv_stream_timeout_pop_buffer (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                               <parameter><link linkend="guint64"><type>guint64</type></link> timeout</parameter>);</programlisting>
<para>Pops a buffer from the output queue of <parameter>stream</parameter>
, waiting no more than <parameter>timeout</parameter>
. The retrieved buffer
may contain an invalid image. Caller should check the buffer status before using it.</para>
<para>This method is thread safe.</para>
<refsect3 id="arv-stream-timeout-pop-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>timeout</para></entry>
<entry role="parameter_description"><para>timeout, in µs</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-timeout-pop-buffer.returns" role="returns">
<title>Returns</title>
<para>a <link linkend="ArvBuffer"><type>ArvBuffer</type></link>, NULL if no buffer is available until the timeout occurs. </para>
<para><emphasis role="annotation">[<acronym>transfer full</acronym>]</emphasis></para>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-stream-get-n-buffers" role="function" condition="since:0.2.0">
<title>arv_stream_get_n_buffers&#160;()</title>
<indexterm zone="arv-stream-get-n-buffers" role="0.2.0"><primary>arv_stream_get_n_buffers</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
arv_stream_get_n_buffers (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                          <parameter><link linkend="gint"><type>gint</type></link> *n_input_buffers</parameter>,
                          <parameter><link linkend="gint"><type>gint</type></link> *n_output_buffers</parameter>);</programlisting>
<para>An accessor to the stream buffer queue lengths.</para>
<refsect3 id="arv-stream-get-n-buffers.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>n_input_buffers</para></entry>
<entry role="parameter_description"><para>input queue length. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>n_output_buffers</para></entry>
<entry role="parameter_description"><para>output queue length. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-stream-start-thread" role="function" condition="since:0.6.2">
<title>arv_stream_start_thread&#160;()</title>
<indexterm zone="arv-stream-start-thread" role="0.6.2"><primary>arv_stream_start_thread</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
arv_stream_start_thread (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>);</programlisting>
<para>Start the stream receiving thread. The thread is automatically started when
the <link linkend="ArvStream"><type>ArvStream</type></link> object is instantiated, so this function is only useful if
the thread was stopped using <parameter>arv_stream_stop_thread</parameter>
.</para>
<refsect3 id="arv-stream-start-thread.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.6.2">0.6.2</link></para></refsect2>
<refsect2 id="arv-stream-stop-thread" role="function" condition="since:0.6.2">
<title>arv_stream_stop_thread&#160;()</title>
<indexterm zone="arv-stream-stop-thread" role="0.6.2"><primary>arv_stream_stop_thread</primary></indexterm>
<programlisting language="C">unsigned <link linkend="int"><returnvalue>int</returnvalue></link>
arv_stream_stop_thread (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                        <parameter><link linkend="gboolean"><type>gboolean</type></link> delete_buffers</parameter>);</programlisting>
<para>Stop the stream receiving thread, and optionally delete all the <link linkend="ArvBuffer"><type>ArvBuffer</type></link>
stored in the stream object queues. Main use of this function is to be able
to quickly change an acquisition parameter that changes the payload size,
without deleting/recreating the stream object.</para>
<refsect3 id="arv-stream-stop-thread.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>delete_buffers</para></entry>
<entry role="parameter_description"><para>enable buffer deletion</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-stop-thread.returns" role="returns">
<title>Returns</title>
<para> the number of deleted buffers if <parameter>delete_buffers</parameter>
== <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, 0 otherwise.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.6.2">0.6.2</link></para></refsect2>
<refsect2 id="arv-stream-get-emit-signals" role="function" condition="since:0.2.0">
<title>arv_stream_get_emit_signals&#160;()</title>
<indexterm zone="arv-stream-get-emit-signals" role="0.2.0"><primary>arv_stream_get_emit_signals</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
arv_stream_get_emit_signals (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>);</programlisting>
<para>Check if stream will emit its signals.</para>
<refsect3 id="arv-stream-get-emit-signals.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-emit-signals.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> if <parameter>stream</parameter>
is emiting its signals.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-stream-set-emit-signals" role="function" condition="since:0.2.0">
<title>arv_stream_set_emit_signals&#160;()</title>
<indexterm zone="arv-stream-set-emit-signals" role="0.2.0"><primary>arv_stream_set_emit_signals</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
arv_stream_set_emit_signals (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                             <parameter><link linkend="gboolean"><type>gboolean</type></link> emit_signals</parameter>);</programlisting>
<para>Make <parameter>stream</parameter>
 emit signals. This option is
by default disabled because signal emission is expensive and unneeded when
the application prefers to operate in pull mode.</para>
<refsect3 id="arv-stream-set-emit-signals.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>emit_signals</para></entry>
<entry role="parameter_description"><para>the new state</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-make-thread-realtime" role="function" condition="since:0.4.0">
<title>arv_make_thread_realtime&#160;()</title>
<indexterm zone="arv-make-thread-realtime" role="0.4.0"><primary>arv_make_thread_realtime</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
arv_make_thread_realtime (<parameter><link linkend="int"><type>int</type></link> priority</parameter>);</programlisting>
<refsect3 id="arv-make-thread-realtime.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>priority</para></entry>
<entry role="parameter_description"><para>realtime priority</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-make-thread-realtime.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success.</para>
<para>Try to make current thread realtime. It first try to use sched_setscheduler,
and if it fails, use rtkit.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.4.0">0.4.0</link></para></refsect2>
<refsect2 id="arv-make-thread-high-priority" role="function" condition="since:0.4.0">
<title>arv_make_thread_high_priority&#160;()</title>
<indexterm zone="arv-make-thread-high-priority" role="0.4.0"><primary>arv_make_thread_high_priority</primary></indexterm>
<programlisting language="C"><link linkend="gboolean"><returnvalue>gboolean</returnvalue></link>
arv_make_thread_high_priority (<parameter><link linkend="int"><type>int</type></link> nice_level</parameter>);</programlisting>
<refsect3 id="arv-make-thread-high-priority.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>nice_level</para></entry>
<entry role="parameter_description"><para>new nice level</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-make-thread-high-priority.returns" role="returns">
<title>Returns</title>
<para> <link linkend="TRUE:CAPS"><literal>TRUE</literal></link> on success.</para>
<para>Try to set current thread nice level to high priority, using rtkit.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.4.0">0.4.0</link></para></refsect2>
<refsect2 id="arv-stream-get-statistics" role="function" condition="since:0.2.0">
<title>arv_stream_get_statistics&#160;()</title>
<indexterm zone="arv-stream-get-statistics" role="0.2.0"><primary>arv_stream_get_statistics</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
arv_stream_get_statistics (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> *n_completed_buffers</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> *n_failures</parameter>,
                           <parameter><link linkend="guint64"><type>guint64</type></link> *n_underruns</parameter>);</programlisting>
<para>An accessor to the stream statistics.</para>
<refsect3 id="arv-stream-get-statistics.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>n_completed_buffers</para></entry>
<entry role="parameter_description"><para>number of complete received buffers. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>n_failures</para></entry>
<entry role="parameter_description"><para>number of reception failures. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
<row><entry role="parameter_name"><para>n_underruns</para></entry>
<entry role="parameter_description"><para>number of input buffer underruns. </para></entry>
<entry role="parameter_annotations"><emphasis role="annotation">[<acronym>out</acronym>][<acronym>allow-none</acronym>]</emphasis></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
<refsect2 id="arv-stream-get-n-infos" role="function" condition="since:0.8.11">
<title>arv_stream_get_n_infos&#160;()</title>
<indexterm zone="arv-stream-get-n-infos" role="0.8.11"><primary>arv_stream_get_n_infos</primary></indexterm>
<programlisting language="C"><link linkend="guint"><returnvalue>guint</returnvalue></link>
arv_stream_get_n_infos (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>);</programlisting>
<refsect3 id="arv-stream-get-n-infos.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-n-infos.returns" role="returns">
<title>Returns</title>
<para> the number of stream informations. These informations contain useful numbers about data transfer quality.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.8.11">0.8.11</link></para></refsect2>
<refsect2 id="arv-stream-get-info-name" role="function" condition="since:0.8.11">
<title>arv_stream_get_info_name&#160;()</title>
<indexterm zone="arv-stream-get-info-name" role="0.8.11"><primary>arv_stream_get_info_name</primary></indexterm>
<programlisting language="C">const <link linkend="char"><returnvalue>char</returnvalue></link>&#160;*
arv_stream_get_info_name (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> id</parameter>);</programlisting>
<refsect3 id="arv-stream-get-info-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>info id</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-info-name.returns" role="returns">
<title>Returns</title>
<para> the name of the corresponding stream information.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.8.11">0.8.11</link></para></refsect2>
<refsect2 id="arv-stream-get-info-type" role="function" condition="since:0.8.11">
<title>arv_stream_get_info_type&#160;()</title>
<indexterm zone="arv-stream-get-info-type" role="0.8.11"><primary>arv_stream_get_info_type</primary></indexterm>
<programlisting language="C"><link linkend="GType"><returnvalue>GType</returnvalue></link>
arv_stream_get_info_type (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                          <parameter><link linkend="guint"><type>guint</type></link> id</parameter>);</programlisting>
<refsect3 id="arv-stream-get-info-type.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>info id</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-info-type.returns" role="returns">
<title>Returns</title>
<para> the <link linkend="GType"><type>GType</type></link> of the corresponding stream information, which indicates what API to use to retrieve the
information value (<link linkend="arv-stream-get-info-uint64"><function>arv_stream_get_info_uint64()</function></link> or <link linkend="arv-stream-get-info-double"><function>arv_stream_get_info_double()</function></link>).</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.8.11">0.8.11</link></para></refsect2>
<refsect2 id="arv-stream-get-info-double" role="function" condition="since:0.8.11">
<title>arv_stream_get_info_double&#160;()</title>
<indexterm zone="arv-stream-get-info-double" role="0.8.11"><primary>arv_stream_get_info_double</primary></indexterm>
<programlisting language="C"><link linkend="double"><returnvalue>double</returnvalue></link>
arv_stream_get_info_double (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                            <parameter><link linkend="guint"><type>guint</type></link> id</parameter>);</programlisting>
<refsect3 id="arv-stream-get-info-double.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>info id</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-info-double.returns" role="returns">
<title>Returns</title>
<para> the value of the corresponding stream information, as a double.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.8.11">0.8.11</link></para></refsect2>
<refsect2 id="arv-stream-get-info-double-by-name" role="function" condition="since:0.8.11">
<title>arv_stream_get_info_double_by_name&#160;()</title>
<indexterm zone="arv-stream-get-info-double-by-name" role="0.8.11"><primary>arv_stream_get_info_double_by_name</primary></indexterm>
<programlisting language="C"><link linkend="double"><returnvalue>double</returnvalue></link>
arv_stream_get_info_double_by_name (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                                    <parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="arv-stream-get-info-double-by-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>info name</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-info-double-by-name.returns" role="returns">
<title>Returns</title>
<para> the value of the corresponding stream information, as a double.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.8.11">0.8.11</link></para></refsect2>
<refsect2 id="arv-stream-get-info-uint64" role="function" condition="since:0.8.11">
<title>arv_stream_get_info_uint64&#160;()</title>
<indexterm zone="arv-stream-get-info-uint64" role="0.8.11"><primary>arv_stream_get_info_uint64</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
arv_stream_get_info_uint64 (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                            <parameter><link linkend="guint"><type>guint</type></link> id</parameter>);</programlisting>
<refsect3 id="arv-stream-get-info-uint64.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>id</para></entry>
<entry role="parameter_description"><para>info id</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-info-uint64.returns" role="returns">
<title>Returns</title>
<para> the value of the corresponding stream information, as a 64 bit unsigned integer.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.8.11">0.8.11</link></para></refsect2>
<refsect2 id="arv-stream-get-info-uint64-by-name" role="function" condition="since:0.8.11">
<title>arv_stream_get_info_uint64_by_name&#160;()</title>
<indexterm zone="arv-stream-get-info-uint64-by-name" role="0.8.11"><primary>arv_stream_get_info_uint64_by_name</primary></indexterm>
<programlisting language="C"><link linkend="guint64"><returnvalue>guint64</returnvalue></link>
arv_stream_get_info_uint64_by_name (<parameter><link linkend="ArvStream"><type>ArvStream</type></link> *stream</parameter>,
                                    <parameter>const <link linkend="char"><type>char</type></link> *name</parameter>);</programlisting>
<refsect3 id="arv-stream-get-info-uint64-by-name.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>a <link linkend="ArvStream"><type>ArvStream</type></link></para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><para>name</para></entry>
<entry role="parameter_description"><para>info name</para></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><refsect3 id="arv-stream-get-info-uint64-by-name.returns" role="returns">
<title>Returns</title>
<para> the value of the corresponding stream information, as a 64 bit unsigned integer.</para>
</refsect3><para role="since">Since: <link linkend="api-index-0.8.11">0.8.11</link></para></refsect2>

</refsect1>
<refsect1 id="ArvStream.other_details" role="details">
<title role="details.title">Types and Values</title>
<refsect2 id="ArvStreamCallbackType" role="enum">
<title>enum ArvStreamCallbackType</title>
<indexterm zone="ArvStreamCallbackType"><primary>ArvStreamCallbackType</primary></indexterm>
<para>Describes when the stream callback is called.</para>
<refsect3 id="ArvStreamCallbackType.members" role="enum_members">
<title>Members</title>
<informaltable role="enum_members_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="enum_members_name" colwidth="300px"/>
<colspec colname="enum_members_description"/>
<colspec colname="enum_members_annotations" colwidth="200px"/>
<tbody>
<row role="constant"><entry role="enum_member_name"><para id="ARV-STREAM-CALLBACK-TYPE-INIT:CAPS">ARV_STREAM_CALLBACK_TYPE_INIT</para></entry>
<entry role="enum_member_description"><para>thread initialization, happens once</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="ARV-STREAM-CALLBACK-TYPE-EXIT:CAPS">ARV_STREAM_CALLBACK_TYPE_EXIT</para></entry>
<entry role="enum_member_description"><para>thread end, happens once</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="ARV-STREAM-CALLBACK-TYPE-START-BUFFER:CAPS">ARV_STREAM_CALLBACK_TYPE_START_BUFFER</para></entry>
<entry role="enum_member_description"><para>buffer filling start, happens at each frame</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
<row role="constant"><entry role="enum_member_name"><para id="ARV-STREAM-CALLBACK-TYPE-BUFFER-DONE:CAPS">ARV_STREAM_CALLBACK_TYPE_BUFFER_DONE</para></entry>
<entry role="enum_member_description"><para>buffer filled, happens at each frame</para>
</entry>
<entry role="enum_member_annotations"></entry>
</row>
</tbody></tgroup></informaltable>
</refsect3></refsect2>
<refsect2 id="ArvStream-struct" role="struct">
<title>ArvStream</title>
<indexterm zone="ArvStream-struct"><primary>ArvStream</primary></indexterm>
<programlisting language="C">typedef struct _ArvStream ArvStream;</programlisting>
</refsect2>

</refsect1>
<refsect1 id="ArvStream.property-details" role="property_details">
<title role="property_details.title">Property Details</title>
<refsect2 id="ArvStream--callback" role="property"><title>The <literal>“callback”</literal> property</title>
<indexterm zone="ArvStream--callback"><primary>ArvStream:callback</primary></indexterm>
<programlisting>  “callback”                 <link linkend="gpointer"><type>gpointer</type></link></programlisting>
<para>Optional user callback.</para><para>Owner: ArvStream</para>
<para>Flags: Read / Write / Construct&#160;Only</para>
</refsect2>
<refsect2 id="ArvStream--callback-data" role="property"><title>The <literal>“callback-data”</literal> property</title>
<indexterm zone="ArvStream--callback-data"><primary>ArvStream:callback-data</primary></indexterm>
<programlisting>  “callback-data”            <link linkend="gpointer"><type>gpointer</type></link></programlisting>
<para>Optional user callback data.</para><para>Owner: ArvStream</para>
<para>Flags: Read / Write / Construct&#160;Only</para>
</refsect2>
<refsect2 id="ArvStream--device" role="property"><title>The <literal>“device”</literal> property</title>
<indexterm zone="ArvStream--device"><primary>ArvStream:device</primary></indexterm>
<programlisting>  “device”                   <link linkend="ArvDevice"><type>ArvDevice</type></link>&#160;*</programlisting>
<para>A ArvDevice parent object.</para><para>Owner: ArvStream</para>
<para>Flags: Read / Write / Construct&#160;Only</para>
</refsect2>
<refsect2 id="ArvStream--emit-signals" role="property"><title>The <literal>“emit-signals”</literal> property</title>
<indexterm zone="ArvStream--emit-signals"><primary>ArvStream:emit-signals</primary></indexterm>
<programlisting>  “emit-signals”             <link linkend="gboolean"><type>gboolean</type></link></programlisting>
<para>Emit signals.</para><para>Owner: ArvStream</para>
<para>Flags: Read / Write</para>
<para>Default value: FALSE</para>
</refsect2>

</refsect1>
<refsect1 id="ArvStream.signal-details" role="signals">
<title role="signals.title">Signal Details</title>
<refsect2 id="ArvStream-new-buffer" role="signal"><title>The <literal>“new-buffer”</literal> signal</title>
<indexterm zone="ArvStream-new-buffer" role="0.2.0"><primary>ArvStream::new-buffer</primary></indexterm>
<programlisting language="C"><link linkend="void"><returnvalue>void</returnvalue></link>
user_function (<link linkend="ArvStream"><type>ArvStream</type></link> *stream,
               <link linkend="gpointer"><type>gpointer</type></link>   user_data)</programlisting>
<para>Signal that a new buffer is available.</para>
<para>This signal is emited from the stream receive thread and only when the
"emit-signals" property is <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>.</para>
<para>The new buffer can be retrieved with <link linkend="arv-stream-pop-buffer"><function>arv_stream_pop_buffer()</function></link>.</para>
<para>Note that this signal is only emited when the "emit-signals" property is
set to <link linkend="TRUE:CAPS"><literal>TRUE</literal></link>, which it is not by default for performance reasons.</para>
<refsect3 id="ArvStream-new-buffer.parameters" role="parameters">
<title>Parameters</title>
<informaltable role="parameters_table" pgwide="1" frame="none">
<tgroup cols="3">
<colspec colname="parameters_name" colwidth="150px"/>
<colspec colname="parameters_description"/>
<colspec colname="parameters_annotations" colwidth="200px"/>
<tbody>
<row><entry role="parameter_name"><para>stream</para></entry>
<entry role="parameter_description"><para>the stream that emited the signal</para></entry>
<entry role="parameter_annotations"></entry></row>
<row><entry role="parameter_name"><simpara>user_data</simpara></entry>
<entry role="parameter_description"><simpara>user data set when the signal handler was connected.</simpara></entry>
<entry role="parameter_annotations"></entry></row>
</tbody></tgroup></informaltable>
</refsect3><para>Flags: <link linkend="G-SIGNAL-RUN-LAST:CAPS">Run Last</link></para>
<para role="since">Since: <link linkend="api-index-0.2.0">0.2.0</link></para></refsect2>
</refsect1>

</refentry>
